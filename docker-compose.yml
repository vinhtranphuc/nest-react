version: '3.8'

services:

  client: 
    container_name: client
    build:
      dockerfile: Dockerfile
      context: ./client
    volumes:
      - ./client:/tpvinh/client
      - /tpvinh/client/node_modules/
    depends_on: 
      - server
    ports:
      - 3000:3000
    links:
      - server
    networks:
      - main-network
    restart: unless-stopped

  server:
    container_name: server
    build:
      dockerfile: Dockerfile
      context: ./server
      target: development
    env_file: ./server/.env
    volumes:
      - ./server:/tpvinh/server
      - /tpvinh/server/node_modules/
    command: pnpm run start:debug
    depends_on: 
      - postgres-main
      - redis-main
    ports:
      - 4000:4000
    networks:
      - main-network
    restart: unless-stopped

  postgres-main:
    container_name: postgres-nest
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test-nest
      PGDATA: /data/postgres
    volumes:
       - postgres-volume:/data/postgres
    ports:
      - 5433:5432
    networks:
      - postgres-network
      - main-network
    restart: unless-stopped
  
  pgadmin-main:
    container_name: pgadmin-nest
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
       - pgadmin-volume:/data/pgadmin
    ports:
      - 8080:80
    depends_on:
      - postgres-main
    networks:
      - postgres-network
    restart: unless-stopped

  redis-main:
    container_name: redis-nest
    image: redis:latest
    ports:
      - 6379:6379
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-volume:/data/redis
    networks:
      - redis-network
      - main-network
    restart: unless-stopped

  redis-commander:
    container_name: redis-commander-nest
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis-main:6379
      - HTTP_USER=root
      - HTTP_PASSWORD=root
    ports:
      - 8081:8081
    depends_on:
      - redis-main
    networks:
      - redis-network
    restart: unless-stopped

  minio:
    container_name: minio-nest
    image: minio/minio
    volumes:
      - minio-volume:/data
    networks:
      - main-network
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: tpvinh
      MINIO_ROOT_PASSWORD: tpvinhminio
    command: server --console-address ":9001" /data

networks:
  postgres-network:
    driver: bridge
  main-network:
    driver: bridge
  redis-network:
    driver: bridge

volumes:
    postgres-volume:
    pgadmin-volume:
    redis-volume:
    minio-volume: